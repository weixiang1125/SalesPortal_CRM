@page
@model CRM_Web.Pages.LoginModel
@{
    Layout = null; // optional: no layout for login
}
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login - SalesPortal</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
        :root {
            --primary-blue: #007bff; /* SalesPortal blue */
            --dark-panel-bg: #2C3E50; /* Dark blue for the left panel, matching dashboard sidebar */
            --text-color-dark: #333;
            --text-color-light: #f5f5f5;
            --border-color: #ddd;
            --button-blue: #007bff; /* Primary button blue */
            --button-blue-hover: #0056b3;
            --faded-grey-text: #b0b0b0;
        }

        body {
            background-color: #f5f5f5; /* Light background for the whole page */
            font-family: 'Poppins', sans-serif;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .login-container {
            flex-grow: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 2rem;
        }

        .login-card {
            max-width: 1000px;
            width: 75%;
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 8px 24px rgba(0,0,0,0.1);
            overflow: hidden;
            display: flex;
        }

        .left-column {
            background-color: var(--dark-panel-bg);
            color: white;
            padding: 50px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            flex: 1;
            min-width: 350px;
        }

            .left-column h2 {
                font-size: 2.5rem;
                font-weight: 700;
                line-height: 1.2;
                margin-bottom: 0;
                display: flex;
                flex-direction: column;
                align-items: center;
            }

                .left-column h2 .welcome-text-part {
                    color: white;
                    margin-bottom: 10px; /* Space between "Welcome to" and "SalesPortal" line */
                }

        .salesportal-branding {
            display: flex; /* Keeps the icon and text aligned */
            align-items: center;
   /* Space between icon and text */
            font-size: 2.5rem; /* Larger font size for the combined branding */
            font-weight: 700;
            letter-spacing: 0.5px;
        }

            .salesportal-branding i {
                color: var(--primary-blue); /* Icon color */
                font-size: 2.5rem;
            }

            /* Corrected: "Sales" part white, "Portal" part blue, no space */
            .salesportal-branding .sales-text {
                color: white;
            }

            .salesportal-branding .portal-text {
                color: var(--primary-blue);
            }

        .right-column {
            flex: 1.5;
            padding: 50px 100px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
        }

        .login-card h4 {
            font-weight: 600;
            color: var(--text-color-dark);
            font-size: 1.8rem;
            margin-bottom: 1.5rem; /* Space below the Sign In title */
            text-align: center;
        }

        hr {
            border-top: 1px solid var(--border-color);
            margin: 1.5rem 0; /* Consistent spacing */
            width: 100%;
        }

        .form-label {
            font-weight: 500;
            color: var(--text-color-dark);
            margin-bottom: 0.5rem;
            width: 100%;
            text-align: left;
        }

        .input-group {
            display: flex;
            align-items: center;
            width: 100%;
        }

        .input-group-text {
            background-color: white; /* Light grey background for the icon */
            border: 1px solid var(--border-color);
            border-right: none;
            padding: 0.675rem 0.75rem; /* Adjust padding to match input height */
            border-radius: 4px 0 0 4px; /* Rounded on left only */
            color: var(--faded-grey-text); /* Icon color */
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1rem;
            height: 42px; /* Match input height */
        }

        .form-control {
            border-radius: 0 4px 4px 0; /* Rounded on right only */
            padding: 10px;
            border: 1px solid var(--border-color);
            font-size: 1.1rem;
            color: var(--text-color-dark);
            flex-grow: 1; /* Allows input to take remaining space */
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
            height: 42px; /* Ensure consistent height with icon */
        }

            .form-control:focus {
                border-color: var(--primary-blue); /* Blue border on focus */
                box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25); /* Blue shadow on focus */
                z-index: 2; /* Bring focused input to front to prevent border overlap */
            }

        /* Adjust focus style for input-group */
        .input-group:focus-within .input-group-text {
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25);
            z-index: 2;
        }

        .input-group:focus-within .form-control {
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25);
        }


        .form-control::placeholder {
            font-size: 0.9rem;
            color: var(--faded-grey-text);
        }

        .btn-primary {
            background-color: var(--button-blue); /* SalesPortal blue button */
            border-color: var(--button-blue);
            padding: 14px;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 4px;
            transition: background-color 0.2s ease, border-color 0.2s ease;
            width: 100%;
        }

            .btn-primary:hover {
                background-color: var(--button-blue-hover);
                border-color: var(--button-blue-hover);
            }

        .text-link {
            font-size: 1rem;
            color: var(--primary-blue); /* SalesPortal blue links */
            text-decoration: none;
            transition: color 0.2s ease;
        }

            .text-link:hover {
                color: var(--button-blue-hover);
                text-decoration: underline;
            }

        .alert-error {
            color: #e74c3c;
            background-color: #fdd;
            border: 1px solid #fbc;
            padding: 0.75rem 1.25rem;
            border-radius: 8px;
            margin-top: 1rem; /* Reduced margin-top for error to decrease blank space */
            margin-bottom: 0; /* Ensure no extra margin at the bottom of the alert */
            font-size: 0.9rem;
        }

        .right-column form {
            width: 100%;
            max-width: 350px;
        }

        .right-column .d-flex.justify-content-end {
            width: 100%;
        }

        .right-column .text-muted {
            color: var(--faded-grey-text) !important;
        }

        /* Adjusted margin for the 'Not a member yet?' text to be closer to the button */
        .right-column .text-center.mt-3 {
            margin-top: 1rem !important; /* Reduced margin-top to close the gap */
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-card">
            <div class="left-column">
                <h2 class="welcome-text">
                    <span class="welcome-text-part">Welcome to</span>
                    <span class="salesportal-branding">
                        <i class="fas fa-chart-line"></i> <span class="sales-text">Sales</span><span class="portal-text">Portal</span>
                    </span>
                </h2>
            </div>

            <div class="right-column">
                <h4 class="text-center">Sign In</h4>
                <hr />

                <form id="loginForm">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-user"></i></span>
                            <input id="username" name="username" class="form-control" required placeholder="Enter username" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input id="password" name="password" class="form-control" type="password" required placeholder="Enter password" />
                        </div>
                    </div>
                    <div class="d-flex justify-content-end align-items-center mb-3">
                        <a href="#" class="text-link">Forgot Password?</a>
                    </div>
                    <button type="submit" class="btn btn-primary">SIGN IN</button>

                    <div id="loginError" class="alert-error text-center" style="display: none;"></div>
                </form>

                <div class="text-center mt-3">
                    <span class="text-muted" style="font-size: 0.9rem;">Not a member yet?</span>
                    <a href="/Register" class="text-link">Sign Up</a>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/jwt-decode.js"></script>

    <script>
        window.API_BASE_URL = '@Configuration["ApiSettings:BaseUrl"]';
        window.FRONTEND_BASE_URL = window.location.origin;

        document.getElementById('loginForm').addEventListener('submit', function(event) {
            event.preventDefault();

            fetch(`${window.API_BASE_URL}/api/Auth/login`, {
                method: 'POST',
                credentials: 'include', // Include cookies in the request
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    username: document.getElementById('username').value.trim(),
                    password: document.getElementById('password').value.trim()
                })
            })
            .then(async response => {
                console.log("Response status:", response.status);
                const responseText = await response.text(); // Get raw response text
                console.log("Raw response:", responseText);

                if (response.ok) {
                    const data = JSON.parse(responseText);
                    const token = data.token;

                    await fetch("/Login?handler=SetToken", {
                        method: "POST",
                        credentials: "include",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(token)
                    });

                    if (!token) {
                        showError("Invalid login response");
                        return;
                    }

                    const decodedToken = jwtDecode(token);
                    console.log(decodedToken);

                    const userId = decodedToken["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];
                    const username = decodedToken["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"];
                    const role = decodedToken["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"];

                    console.log("Logged in as:", username, "Role:", role);

                    sessionStorage.setItem("userId", userId);
                    sessionStorage.setItem('username', username);
                    sessionStorage.setItem('role', role);

                    await fetch("/Login?handler=SetSession", {
                        method: "POST",
                        credentials: "include",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            userID: parseInt(userId),
                            username: username,
                            role: role
                        })
                    });

                    window.location.href = `${window.FRONTEND_BASE_URL}/Dashboard`;
                } else {
                    const error = responseText ? JSON.parse(responseText) : { message: "Login failed" };
                    showError(error.message);
                }
            })
            .catch(error => {
                console.error("Error during fetch:", error);
                showError("Network error");
            });
        });

        function showError(message) {
            const el = document.getElementById('loginError');
            el.style.display = 'block';
            el.textContent = message;
        }

        const reason = sessionStorage.getItem("logoutReason");
        if (reason) {
            showError(reason);
            sessionStorage.removeItem("logoutReason");
        }
    </script>
</body>
</html>