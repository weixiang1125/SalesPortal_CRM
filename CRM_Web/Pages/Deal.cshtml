@page
@model CRM_Web.Pages.Deals.DealModelPage
@{
    ViewData["Title"] = "Deals";
}

<h2 class="mb-4">Deals</h2>

<div class="mb-3">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createDealModal">
        <i class="fas fa-plus"></i> Create Deal
    </button>
</div>

<div class="mb-3">
    <button id="toggleViewBtn" class="btn btn-secondary">
        <i class="fas fa-columns"></i> Switch to Kanban View
    </button>
</div>

<div id ="tableView">
    @if (Model.DealModel.Deals != null && Model.DealModel.Deals.Any())
    {
        <table id="dealsTable" class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Deal ID</th>
                    <th>Deal Name</th>
                    <th>Value</th>
                    <th>Stage</th>
                    <th>Status</th>
                    <th>Expected Close</th>
                    <th>Created Date</th>
                    <th>Updated Date</th>
                    <th>Created By</th>
                    <th>Updated By</th>
                    <th>Contact</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var deal in Model.DealModel.Deals)
                {
                    <tr id="dealRow-@deal.DealID">
                        <td>@deal.DealID</td>
                        <td class="dealName">@deal.DealName</td>
                        <td class="dealValue">@(deal.Value?.ToString("C") ?? "-")</td>
                        <td class="dealStage">@deal.Stage</td>
                        <td class="dealStatus">@deal.Status</td>
                        <td class="dealCloseDate">@(deal.ExpectedCloseDate?.ToShortDateString() ?? "-")</td>
                        <td>@deal.CreatedDate?.ToString("g")</td>

                        <td>@deal.UpdatedDate?.ToString("g")</td>

                        <td>@deal.CreatedBy</td>
                        <td>@deal.UpdatedBy</td>
                        <td>@deal.Contact?.Name</td>
                        <td>
                            <button class="btn btn-sm btn-primary me-1 btn-edit" data-bs-toggle="modal" data-bs-target="#editDealModal" data-dealid="@deal.DealID">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="confirmDelete('@deal.DealID')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info">No deals available.</div>
    }

</div>

<!-- Kanban View -->
<div id="kanbanView" class="mt-3" style="display: none;">
    @{
        var stages = new[] { "Proposal", "Negotiation", "Closing", "Retention" };
    }

    <div class="row g-4">
        @foreach (var stage in stages)
        {
            <div class="col-md-3">
                <div class="card border-dark shadow-sm h-100">
                    <div class="card-header bg-dark text-white">
                        <strong>@stage</strong>
                    </div>
                    <div class="card-body" style="min-height: 300px;">
                        @if (Model.DealModel.Deals != null && Model.DealModel.Deals.Any(d => d.Stage == stage))
                        {
                            foreach (var deal in Model.DealModel.Deals.Where(d => d.Stage == stage))
                            {
                                <div class="card mb-3 border-primary deal-card" id="dealCard-@deal.DealID">
                                    <div class="card-body p-2">
                                        <h6 class="card-title mb-1">@deal.DealName</h6>
                                        <p class="mb-1"><strong>Value:</strong> @(deal.Value?.ToString("C") ?? "-")</p>
                                        <p class="mb-1"><strong>Status:</strong> @deal.Status</p>
                                        <p class="mb-1"><strong>Contact:</strong> @deal.Contact?.Name</p>
                                        <div class="d-flex justify-content-end">
                                            <button class="btn btn-sm btn-primary me-1 btn-edit" data-bs-toggle="modal" data-bs-target="#editDealModal" data-dealid="@deal.DealID">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-danger" onclick="confirmDelete('@deal.DealID')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No deals</p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Create Deal Modal -->
<div class="modal fade" id="createDealModal" tabindex="-1" aria-labelledby="createDealModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="createDealForm" method="post" asp-page-handler="Create">
                <div class="modal-header">
                    <h5 class="modal-title" id="createDealModalLabel">Create New Deal</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body row g-3">
                    <div class="col-md-6">
                        <label asp-for="DealModel.NewDeal.DealName" class="form-label">Deal Name</label>
                        <input asp-for="DealModel.NewDeal.DealName" class="form-control" id="DealName" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.NewDeal.Value" class="form-label">Value</label>
                        <input asp-for="DealModel.NewDeal.Value" class="form-control" id="Value" type="number" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.NewDeal.Stage" class="form-label">Stage</label>
                        <input asp-for="DealModel.NewDeal.Stage" class="form-control" id="Stage" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.NewDeal.Status" class="form-label">Status</label>
                        <input asp-for="DealModel.NewDeal.Status" class="form-control" id="Status" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.NewDeal.ExpectedCloseDate" class="form-label">Expected Close Date</label>
                        <input asp-for="DealModel.NewDeal.ExpectedCloseDate" class="form-control" id="ExpectedCloseDate" type="date" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.NewDeal.ContactID" class="form-label">Contact ID</label>
                        <input asp-for="DealModel.NewDeal.ContactID" class="form-control" id="ContactID" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Deal Modal -->
<div class="modal fade" id="editDealModal" tabindex="-1" aria-labelledby="editDealModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editDealForm" method="post" asp-page-handler="Edit">
                <div class="modal-header">
                    <h5 class="modal-title" id="editDealModalLabel">Edit Deal</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body row g-3">
                    <input asp-for="DealModel.DealToEdit.DealID" type="hidden" id="DealID" />
                    <div class="col-md-6">
                        <label asp-for="DealModel.DealToEdit.DealName" class="form-label">Deal Name</label>
                        <input asp-for="DealModel.DealToEdit.DealName" class="form-control" id="EditDealName" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.DealToEdit.Value" class="form-label">Value</label>
                        <input asp-for="DealModel.DealToEdit.Value" class="form-control" id="EditValue" type="number" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.DealToEdit.Stage" class="form-label">Stage</label>
                        <input asp-for="DealModel.DealToEdit.Stage" class="form-control" id="EditStage" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.DealToEdit.Status" class="form-label">Status</label>
                        <input asp-for="DealModel.DealToEdit.Status" class="form-control" id="EditStatus" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.DealToEdit.ExpectedCloseDate" class="form-label">Expected Close Date</label>
                        <input asp-for="DealModel.DealToEdit.ExpectedCloseDate" class="form-control" id="EditExpectedCloseDate" type="date" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="DealModel.DealToEdit.ContactID" class="form-label">Contact ID</label>
                        <input asp-for="DealModel.DealToEdit.ContactID" class="form-control" id="EditContactID" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" />
    <style>
        .deal-card:hover {
            background-color: #f8f9fa;
            cursor: grab;
        }
    </style>
}


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#dealsTable').DataTable({
                paging: true,
                searching: true,
                lengthChange: true,
                pageLength: 10,
                lengthMenu: [5, 10, 25, 50, 100]
            });

            $("#toggleViewBtn").click(function () {
                const tableView = $("#tableView");
                const kanbanView = $("#kanbanView");

                if (tableView.is(":visible")) {
                    tableView.hide();
                    kanbanView.show();
                    $(this).html('<i class="fas fa-table"></i> Switch to Table View');
                } else {
                    kanbanView.hide();
                    tableView.show();
                    $(this).html('<i class="fas fa-columns"></i> Switch to Kanban View');
                }
            });


            // Create Deal
            $("#createDealForm").submit(function (e) {
                e.preventDefault();

                const formData = {
                    DealName: $("#DealName").val(),
                    Value: $("#Value").val(),
                    Stage: $("#Stage").val(),
                    Status: $("#Status").val(),
                     ExpectedCloseDate: $("#ExpectedCloseDate").val() ? $("#ExpectedCloseDate").val() : null,  // Handle nullable date
                    ContactID: $("#ContactID").val()
                };

                $.ajax({
                    url: 'https://localhost:44309/api/Deal/CreateDeal',
                    type: 'POST',
                    contentType: 'application/json',                 
                    data: JSON.stringify(formData),
                    xhrFields: {
                        withCredentials: true
                    },
                    success: function (response) {
                        location.reload(); // Easier: reload after add
                    },
                    error: function () {
                        alert("Error creating deal.");
                    }
                });
            });

            // Edit Deal
            $("#editDealForm").submit(function (e) {
                e.preventDefault();

                const formData = {
                    DealID: $("#DealID").val(),
                    DealName: $("#EditDealName").val(),
                    Value: $("#EditValue").val(),
                    Stage: $("#EditStage").val(),
                    Status: $("#EditStatus").val(),
                    ExpectedCloseDate: $("#EditExpectedCloseDate").val() ? $("#EditExpectedCloseDate").val() : null, // Handle nullable date
                    ContactID: $("#EditContactID").val()
                };

                $.ajax({
                    url: `https://localhost:44309/api/Deal/UpdateDealById/${formData.DealID}`,
                    type: 'PUT',
                    contentType: 'application/json',
                    headers:{
                        'Authorization': 'Bearer ' + localStorage.getItem("authToken")
                    },
                    data: JSON.stringify(formData),
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert("Error updating deal.");
                    }
                });
            });

            // Populate Edit Modal
            $(document).on("click", ".btn-edit", function () {
                const dealId = $(this).data("dealid");

                $.ajax({
                    url: `https://localhost:44309/api/Deal/GetDealById/${dealId}`,
                    type: "GET",
                    headers:{
                        'Authorization': 'Bearer ' + localStorage.getItem("authToken")
                    },
                    success: function (deal) {
                        $("#DealID").val(deal.dealID);
                        $("#EditDealName").val(deal.dealName);
                        $("#EditValue").val(deal.value);
                        $("#EditStage").val(deal.stage);
                        $("#EditStatus").val(deal.status);
                        $("#EditExpectedCloseDate").val(deal.expectedCloseDate?.split("T")[0]);
                        $("#EditContactID").val(deal.contactID);
                    },
                    error: function () {
                        alert("Error fetching deal details.");
                    }
                });
            });
        });

        function confirmDelete(dealId) {
            if (confirm("Are you sure you want to delete this deal?")) {
                $.ajax({
                    url: `https://localhost:44309/api/Deal/DeleteDealById/${dealId}`,
                    type: "DELETE",
                    headers:{
                        'Authorization': 'Bearer ' + localStorage.getItem("authToken")
                    },
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert("Error deleting deal.");
                    }
                });
            }
        }
    </script>
}
