@page
@model CRM_Web.Pages.Contacts.ContactModelPage
@{
    ViewData["Title"] = "Contacts";
}
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration


<h2 class="mb-4">Contacts</h2>

<div class="mb-3">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createContactModal">
        <i class="fas fa-plus"></i> Create Contact
    </button>
</div>

<table id="contactsTable" class="table table-bordered table-striped">
    <thead class="table-dark">
        <tr>
            <th>#</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Company</th>
            <th>Status</th>
            <th>Notes</th>
            <th class="admin-column">Created Date</th>
            <th class="admin-column">Created By</th>
            <th class="admin-column">Updated Date</th>
            <th class="admin-column">Updated By</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="contactsTableBody">
        <!-- JavaScript will populate rows here -->
    </tbody>
</table>


<!-- Create Contact Modal -->
<div class="modal fade" id="createContactModal" tabindex="-1" aria-labelledby="createContactModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="createContactForm">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Contact</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body row g-3">
                    <div class="col-6">
                        <label class="form-label">Name</label>
                        <input class="form-control" id="Name" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Email</label>
                        <input class="form-control" id="Email" type="email" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Phone</label>
                        <input class="form-control" id="Phone" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Company</label>
                        <input class="form-control" id="Company" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Status</label>
                        <select class="form-select" id="Status">
                            <option value="Active">Active</option>
                            <option value="Inactive">Inactive</option>
                        </select>
                    </div>
                    <div class="col-12">
                        <label class="form-label">Notes</label>
                        <textarea class="form-control" id="Notes"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Contact Modal -->
<div class="modal fade" id="editContactModal" tabindex="-1" aria-labelledby="editContactModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editContactForm">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Contact</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body row g-3">
                    <input type="hidden" id="EditContactID" />
                    <div class="col-6">
                        <label class="form-label">Name</label>
                        <input class="form-control" id="EditName" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Email</label>
                        <input class="form-control" id="EditEmail" type="email" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Phone</label>
                        <input class="form-control" id="EditPhone" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Company</label>
                        <input class="form-control" id="EditCompany" />
                    </div>
                    <div class="col-6">
                        <label class="form-label">Status</label>
                        <select class="form-select" id="EditStatus">
                            <option value="Active">Active</option>
                            <option value="Inactive">Inactive</option>
                        </select>
                    </div>
                    <div class="col-12">
                        <label class="form-label">Notes</label>
                        <textarea class="form-control" id="EditNotes"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" />
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>

    <script>
        window.API_BASE_URL = '@Configuration["ApiSettings:BaseUrl"]';

        function confirmDelete(contactId) {
            if (confirm("Are you sure you want to delete this contact?")) {
                $.ajax({
                    url: `${window.API_BASE_URL}/api/Contact/DeleteContactById/${contactId}`,
                    type: 'DELETE',
                    xhrFields: { withCredentials: true },
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert("Error deleting contact.");
                    }
                });
            }
        }

        function formatDate(dateString) {
            if (!dateString) return '';
            const localDate = new Date(dateString);
            return localDate.toLocaleString('en-MY', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false
            });
        }

        function goToChat(phone) {
            if (!phone) return;
            const normalized = phone.startsWith("+") ? phone : "+" + phone;
            window.location.href = `/Chat?phone=${encodeURIComponent(normalized)}`;
        }

        $(document).ready(function () {
            // Choose one method to determine admin status
            const isAdmin = sessionStorage.getItem('role') === 'Admin';

               function loadContacts() {
                    $.ajax({
                        url: `${window.API_BASE_URL}/api/Contact/GetContactsByUserId`,
                        method: 'GET',
                        xhrFields: { withCredentials: true },
                        success: function (contacts) {
                            const tbody = $("#contactsTableBody");
                            tbody.empty();

                            const list = contacts.$values ?? contacts;
                            list.forEach((contact, index) => {
                                const row = `
                                    <tr id="contactRow-${contact.contactID}">
                                        <td>${index + 1}</td>
                                        <td>${contact.name}</td>
                                        <td>${contact.email}</td>
                                        <td>${contact.phone}</td>
                                        <td>${contact.company}</td>
                                        <td>${contact.status}</td>
                                        <td>${contact.notes}</td>
                                        <td class="admin-column">${formatDate(contact.createdDate)}</td>
                                        <td class="admin-column">${contact.createdByUsername ?? ''}</td>
                                        <td class="admin-column">${formatDate(contact.updatedDate)}</td>
                                        <td class="admin-column">${contact.updatedByUsername ?? ''}</td>

                                        <td>
                                            <button class="btn btn-sm btn-success me-1" onclick="goToChat('${contact.phone}')">
                                                <i class="fas fa-comments"></i>
                                            </button>
                                            <button class="btn btn-sm btn-primary me-1 btn-edit" data-bs-toggle="modal" data-bs-target="#editContactModal" data-contactid="${contact.contactID}">
                                                <i class="fas fa-edit"></i>
                                            </button>                                        
                                            <button class="btn btn-sm btn-danger" onclick="confirmDelete('${contact.contactID}')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>`;
                                tbody.append(row);
                            });

                            // Destroy old instance if exists
                            if ($.fn.DataTable.isDataTable('#contactsTable')) {
                                $('#contactsTable').DataTable().destroy();
                            }

                            // Re-initialize after data is fully loaded
                            $('#contactsTable').DataTable({
                                paging: true,
                                searching: true,
                                lengthChange: true,
                                pageLength: 10,
                                lengthMenu: [5, 10, 25, 50, 100],
                                columnDefs: [{
                                    targets: 0,
                                    searchable: false,
                                    orderable: false
                                }],
                                order: [[1, 'asc']],
                                drawCallback: function (settings) {
                                    let api = this.api();
                                    api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                                        cell.innerHTML = i + 1;
                                    });
                                }
                            });

                            // Optional: hide admin columns if needed
                            const isAdmin = sessionStorage.getItem('role') === 'Admin';
                            if (!isAdmin) $('.admin-column').hide();
                        },
                        error: function () {
                            alert("Failed to load contacts.");
                        }
                    });
                }




                loadContacts();

            // Create Contact
            $("#createContactForm").submit(function (e) {
                e.preventDefault();

                const formData = {
                    Name: $("#Name").val(),
                    Email: $("#Email").val(),
                    Phone: $("#Phone").val(),
                    Company: $("#Company").val(),
                    Status: $("#Status").val(),
                    Notes: $("#Notes").val()
                };

                $.ajax({
                    url: `${window.API_BASE_URL}/api/Contact/CreateContact`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    xhrFields: { withCredentials: true },
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert("Error creating contact.");
                    }
                });
            });

            // Edit Contact
            $("#editContactForm").submit(function (e) {
                e.preventDefault();

                const contactId = $("#EditContactID").val();
                const formData = {
                    ContactID: contactId,
                    Name: $("#EditName").val(),
                    Email: $("#EditEmail").val(),
                    Phone: $("#EditPhone").val(),
                    Company: $("#EditCompany").val(),
                    Status: $("#EditStatus").val(),
                    Notes: $("#EditNotes").val()
                };

                $.ajax({
                    url: `${window.API_BASE_URL}/api/Contact/UpdateContactById/${contactId}`,
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    xhrFields: { withCredentials: true },
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert("Error updating contact.");
                    }
                });
            });

            // Populate Edit Modal
                $(document).on("click", ".btn-edit", function () {
                const contactId = $(this).data("contactid");

                $.ajax({
                    url: `${window.API_BASE_URL}/api/Contact/GetContactById/${contactId}`,
                    type: 'GET',
                    xhrFields: { withCredentials: true },
                    success: function (contact) {
                        $("#EditContactID").val(contact.contactID);
                        $("#EditName").val(contact.name);
                        $("#EditEmail").val(contact.email);
                        $("#EditPhone").val(contact.phone);
                        $("#EditCompany").val(contact.company);
                        $("#EditStatus").val(contact.status);
                        $("#EditNotes").val(contact.notes);
                    },
                    error: function () {
                        alert("Error loading contact.");
                    }
                });
            });
        });
    </script>
}
